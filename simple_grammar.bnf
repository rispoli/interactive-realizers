<BOOL> ::= true | false

<ID> ::= [a-zA-Z]+[a-zA-Z0-9_]*

<NUM> ::= [0-9]+

<prefix-op> ::= - | not

<infix-op> ::= + | - | * | / | ^ | ** | == | != | < | > | <= | >= | & | && | || | or

<case-list> ::= <expr>: <expr>; <case-list>
             |  default: <expr>;

<expr> ::= <BOOL>
      |  <ID>
      |  <NUM>
      |  ( <expr> )
      |  [ <expr> { ; <expr> }* ]
      |  <expr> <expr>
      |  <prefix-op> <expr>
      |  <expr> <infix-op> <expr>
      |  if <expr> then <expr> else <expr>
      |  let <ID>+ = <expr>
      |  let <ID>+ = <expr> in <expr>
      |  letrec <ID>+ = case <case-list> with <expr>
      |  letrec <ID>+ = <expr>: <expr>; with <expr>
      |  fn <ID>+ -> <expr>
      |  lambda <ID>+ -> <expr>
